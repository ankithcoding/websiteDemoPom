<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<beans:bean id="productItemListener" class="com.paperight.product.batch.ProductItemListener" scope="step">
		<beans:property name="inputFilename" value="#{jobParameters['input.file.name']}" />
	</beans:bean>
	
	<beans:bean id="productItemProcessor" class="com.paperight.product.batch.ProductItemProcessor" />

	<job id="productImportJob" >
		<step id="importProducts">
			<tasklet>
				<chunk reader="productImportFileItemReader" processor="productItemProcessor" writer="productWriter" commit-interval="10" skip-limit="1000000000" >
					<skippable-exception-classes>
						<include class="org.springframework.batch.item.file.FlatFileParseException" />
						<include class="com.paperight.product.batch.ProductItemProcessException" />
					</skippable-exception-classes>
				</chunk>
				<listeners>
					<listener ref="productItemListener" />
				</listeners>
			</tasklet>
		</step>
	</job>
	
	<beans:bean id="productImportFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<beans:property name="resource" value="file:#{jobParameters['input.file.name']}" />
		<beans:property name="linesToSkip" value="1" />
		<beans:property name="lineMapper">
			<beans:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<beans:property name="names" value="COPYRIGHT_STATUS,IDENTIFIER,IDENTIFIER_TYPE,PUBLISHER,TITLE,SUBTITLE,ALTERNATIVE_TITLE,PRIMARY_CREATORS,SECONDARY_CREATORS,EDITION,PRIMARY_LANGUAGES,SECONDARY_LANGUAGES,SUBJECT_AREA,PUBLICATION_DATE,EMBARGO_DATE,LICENCE_FEE_IN_DOLLARS,SHORT_DESCRIPTION,LONG_DESCRIPTION,PARENT_ISBN,ALTERNATE_ISBN,AUDIENCE,ONE_UP_PDF_FILENAME,TWO_UP_PDF_FILENAME,A5_PDF_FILENAME,JACKET_IMAGE_NAME,TERRITORY,TAGS,URL,URL_CALL_TO_ACTION,SUPPORTS_ADS,SAMPLE_PAGE_RANGE,LICENCE_STATEMENT" />
					</beans:bean>
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean class="com.paperight.product.batch.ProductFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="productWriter" class="com.paperight.product.batch.ProductItemWriter" />

</beans:beans>
