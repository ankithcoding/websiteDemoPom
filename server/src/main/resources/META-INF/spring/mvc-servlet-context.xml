<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xmlns:security="http://www.springframework.org/schema/security"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<import resource="classpath:META-INF/spring/resource-context.xml"/>

    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <context:component-scan base-package="com.paperight.mvc.controller" use-default-filters="false">
        <context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
    </context:component-scan>

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven conversion-service="conversionService" >
        <mvc:argument-resolvers>
            <bean class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" />
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    
    <bean class="org.springframework.data.repository.support.DomainClassConverter">
        <constructor-arg ref="conversionService"/>
    </bean>
 
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>

    <bean class="com.paperight.mvc.support.SessionConversationAttributeStore">
    	<property name="numConversationsToKeep" value="100"/>
	</bean>
    
    <!-- Enables the Spring MVC @PreAuthorize @PostAuthorize annotations -->
    <security:global-method-security pre-post-annotations="enabled" proxy-target-class="true">
    	<security:expression-handler ref="expressionHandler" />
    </security:global-method-security>
    
    <bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<property name="permissionEvaluator" ref="permissionEvaluator" />
	</bean>

	<bean id="permissionEvaluator" class="com.paperight.authentication.PermissionEvaluatorImpl" />
    
    <!-- Resolves localized messages*.properties and application.properties files in the application to allow for internationalization. 
    The messages*.properties files translate Roo generated messages which are part of the admin interface, the 
    application.properties resource bundle localizes all application specific messages such as entity names and menu items. -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    	<property name="basenames" value="WEB-INF/i18n/messages,WEB-INF/i18n/application" />
    	<property name="fallbackToSystemLocale" value="true" />
    </bean>
    
    <!-- Tiles Definitions -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions" value="/WEB-INF/layouts/**/layouts.xml,/WEB-INF/views/**/views.xml" />
		<property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory" />
	</bean>
    
    <!-- Tiles View Resolver -->
    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles2.TilesViewResolver">
		<property name="order" value="1" />
    </bean>
    
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
        <property name="order" value="2" />
    </bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
    
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/css directory -->
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/fonts/**" location="/fonts/" />
    <mvc:resources mapping="/img/**" location="/img/" />
    <mvc:resources mapping="/favicon.ico" location="/img/favicon.ico" />
    <mvc:resources mapping="/themes/**" location="/themes/" />
    <mvc:view-controller path="/error" view-name="error" />
    <mvc:view-controller path="/error/405" view-name="error" />
    <mvc:view-controller path="/error/404" view-name="error/404" />
    <mvc:view-controller path="/error/403" view-name="error/403" />
    
    <!-- Themes -->
	
	<bean id="themeSource" class="com.paperight.theme.PaperightThemeSource" />
    
</beans>
